before_script:
    - env
    - git remote set-url origin https://${HOG_USER}:${HOG_PUSH_TOKEN}@gitlab.cern.ch/atlas-l1calo-efex/eFEXFirmware.git
    - git config user.email ${HOG_EMAIL}
    - git config user.name ${HOG_USER}
    - git checkout $CI_COMMIT_REF_NAME
    - git submodule init
    - git submodule update
    - export XILINXD_LICENSE_FILE=${HOG_XIL_LICENSE}
    - export PATH=$PATH:${HOG_PATH}
    - "MR_PARAMETERS=`curl --header \"PRIVATE-TOKEN: ${HOG_PUSH_TOKEN}\" ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}`"
    - export WIP=`echo $MR_PARAMETERS | jq -r '.work_in_progress'`
    - export MERGE_STATUS=`echo $MR_PARAMETERS | jq -r '.merge_status'`
    - DESCRIPTION=`echo $MR_PARAMETERS | jq -r '.description'`
    - "echo \"wip ${WIP} merge_status ${MERGE_STATUS}  Description ${DESCRIPTION}\""
    - export VERSION=0
    - "if [[ $DESCRIPTION =~ .*MAJOR_VERSION.* ]]; then export VERSION=1; fi"
    - "if [[ $DESCRIPTION =~ .*MINOR_VERSION.* ]]; then export VERSION=2; fi"
    - "echo \"Version Level $VERSION\""

.only-default: &only-default
  only:
    - master
    - merge_requests
  except:
    variables:
     - $WIP == "true"
     - $MERGE_STATUS != "can_be_merged"
  tags:
     - hog

.vars: &vars
    GIT_STRATEGY: clone

stages:
    - merge
    - creation
    - ip
    - synthesis
    - implementation

.vars: &vars
    GIT_STRATEGY: clone

.only-default: &only-default
  only:
    - master
    - merge_requests

.create_project: &create_project
     <<: *only-default
     stage: creation
     variables:
        <<: *vars
     script:
      - env
      - ./CreateProject.sh $PROJECT_NAME
     artifacts:
       name: vivado_projects
       paths:
         - $CI_PROJECT_DIR/VivadoProject
       expire_in: 2 day

.synthesise_ips: &synthesise_ips
    <<: *only-default
    stage: ip
    variables:
        <<: *vars    
    script:
        - vivado -mode batch -notrace -source ./Hog/Tcl/launch_ip_synth.tcl -tclargs $PROJECT_NAME
    artifacts:
        name: vivado_runs
        paths:
            - $CI_PROJECT_DIR/VivadoProject/$PROJECT_NAME/$PROJECT_NAME.runs
            - $CI_PROJECT_DIR/$IP_PATH1
            - $CI_PROJECT_DIR/$IP_PATH2
            - $CI_PROJECT_DIR/$IP_PATH3
        expire_in: 2 day

.synthesise_project: &synthesise_project
    <<: *only-default
    stage: synthesis
    variables:
        <<: *vars        
    script:
        - ./Hog/Ignore_ip_xml.sh
        - git status
        - vivado -mode batch -notrace -source ./Hog/Tcl/launch_synthesis.tcl -tclargs $PROJECT_NAME
    artifacts:
        name: vivado_synth
        paths:
            - $CI_PROJECT_DIR/VivadoProject/$PROJECT_NAME/$PROJECT_NAME.runs/
        expire_in: 2 day

.implement_project: &implement_project
    <<: *only-default    
    stage: implementation
    variables:
        <<: *vars        
    script:
        - vivado -mode batch -notrace -source ./Hog/Tcl/launch_implementation.tcl -tclargs $PROJECT_NAME
    artifacts:
        name: bitfiles
        paths:
            - $CI_PROJECT_DIR/bin
        expire_in: 10 years 

merge_and_tag:
     <<: *only-default
     stage: merge
     variables:
       GIT_STRATEGY: clone
     script:
      - git merge --no-commit origin/master     
      - vivado -mode batch -notrace -source ./Hog/Tcl/tag_repository.tcl -tclargs $CI_MERGE_REQUEST_IID $VERSION
      - git push origin $CI_COMMIT_REF_NAME
      - git push --tags origin $CI_COMMIT_REF_NAME      
