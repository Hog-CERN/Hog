default:
      before_script:
          - export REPO=`echo $CI_PROJECT_URL | sed -e s#https://##`
          - git remote set-url origin https://hog:${HOG_PUSH_TOKEN}@$REPO
          - git config user.email "hog.cern.ch"
          - git config user.name "Hog"
          - git fetch 
          - git fetch origin $CI_COMMIT_REF_NAME
          - git checkout $CI_COMMIT_REF_NAME

stages:
      - tag
      - build
      - deploy
building:
      stage: build
      image: gitlab-registry.cern.ch/authoring/documentation/mkdocs:stable
      before_script: 
        - echo ""
      script:
        - mkdocs build --clean --site-dir public
        - cp docs/.htaccess public/
      artifacts:
        paths:
          - public
        expire_in: 1 hour
deploying:
      stage: deploy
      image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
      only:
        - feature/documentation
      before_script:
        - echo ""
      script:
        - deploy-eos


merge_and_tag:
      stage: tag
      image: tcl2020/tcl2020:latest
      only: 
           refs:
              - merge_requests
      script:
          - "MR_PARAMETERS=`curl --header \"PRIVATE-TOKEN: ${HOG_PUSH_TOKEN}\" ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}`"
          - ./Tcl/launchers/launch_merge_and_tag.tcl -Hog  -mr_par "$MR_PARAMETERS" -mr_id $CI_MERGE_REQUEST_IID -push $CI_COMMIT_REF_NAME
          - git fetch origin refs/notes/*:refs/notes/*
          - git notes add -m "$CI_MERGE_REQUEST_IID"
          - git push origin refs/notes/*
          - ./Other/Changelog.sh > changelog.md
      artifacts:
        name: changelog
        paths:
          - changelog.md
        expire_in: 1 month

tagging:
      stage: tag
      image: tcl2020/tcl2020:latest
      only: 
          - push
          - web
      except:
          variables:
              - $CI_PIPELINE_SOURCE != "push"
              - $CI_COMMIT_REF_SLUG != "master"
      script:
          - ./Tcl/launchers/launch_merge_and_tag.tcl -Hog -merged -push $CI_COMMIT_REF_NAME

create_release_note:
        stage: tag
        image: tcl2020/tcl2020:latest
        only:
          refs:
            - tags
          variables:
            - $CI_COMMIT_TAG =~ /^v.*$/

        script:
          - git fetch origin refs/notes/*:refs/notes/*
          - MR=`git notes show`
          - ./Other/GetGitlabArtifact.sh $HOG_PUSH_TOKEN $CI_API_V4_URL $CI_PROJECT_ID $MR changelog.md merge_and_tag > note.md
          - ./Other/MakeGitlabRelease.sh $HOG_PUSH_TOKEN $CI_API_V4_URL $CI_PROJECT_ID $CI_COMMIT_TAG note.md